shiny::runApp('C:/Personal/Master EIT/Madrid_UPM/Data processes/DataViz')
shiny::runApp('C:/Personal/Master EIT/Madrid_UPM/Data processes/DataViz')
df <- read.csv("data/Unplanned_Hospital_Visits-Hospital.csv")
setwd("C:/Personal/Master EIT/Madrid_UPM/Data processes/DataViz")
df <- read.csv("data/Unplanned_Hospital_Visits-Hospital.csv")
runApp()
runApp()
runApp()
data  <- subset(df, Measure.Name=="Hospital return days for heart attack patients", select=c(Location, Compared.to.National, Score, Denominator))
n_hosp_in_county <- count(group_by(data, Location))
n_hosp_wo_var_in_county <- aggregate(data$Score, by = list(data$Location), function(x) {sum(is.na(x))})
n_hosp_wo_var_in_county <- n_hosp_wo_var_in_county[with(n_hosp_wo_var_in_county, order(Group.1)), ]
print(1)
if (sel == "Specific values"){
data[is.na(data)] <- 0
}
else{
data$Score[grepl("Fewer",   data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("Better",  data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("erage D", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("No Diff", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("More",    data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Worse",   data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Number",  data$Compared.to.National, fixed = TRUE)] <- 0
data$Score[grepl("Not Av",  data$Compared.to.National, fixed = TRUE)] <- 0
}
print(1)
added_score_hosp_county <- aggregate(data$Score, by = list(data$Location), FUN=sum, na.rm = TRUE)
added_score_hosp_county <- added_score_hosp_county[with(added_score_hosp_county, order(Group.1)), ]
names(n_hosp_in_county)[names(n_hosp_in_county) == "n"] <- "n_hosp"
n_hosp_in_county$n_hosp_with_var <- n_hosp_in_county$n_hosp - n_hosp_wo_var_in_county$x
n_hosp_in_county$added_score     <- added_score_hosp_county$x
score_manager <- function(n_hosp_with_var, added_score){
if (n_hosp_with_var > 0){ return(added_score / n_hosp_with_var) }
else{ return(NA) }
}
n_hosp_in_county$mean_score <- mapply(score_manager, n_hosp_in_county$n_hosp_with_var, n_hosp_in_county$added_score)
n_hosp_in_county <- subset(n_hosp_in_county, select=c(Location, mean_score))
n_hosp_in_county <- rbind(n_hosp_in_county, mis)
n_hosp_in_county <- n_hosp_in_county[with(n_hosp_in_county, order(Location)), ]
df <- read.csv("data/Unplanned_Hospital_Visits-Hospital.csv")
mis <- subset(read.csv("aux_missing_counties.csv"), select=c(Location, mean_score))
mis <- transform(mis, mean_score = as.numeric(mean_score))
mis2 <- mis
mis2[is.na(mis2)] <- 0
df <- subset(df, select=c(State, County.Name, Measure.Name, Compared.to.National, Score, Denominator))
df <- transform(df, Score = as.numeric(Score))
df <- transform(df, Denominator = as.numeric(Denominator))
df <- cleaning(df)
df$State <- sapply(df$State, state_to_name)
df$Location <- paste(df$State, df$County.Name, sep=",")
df <- subset(df, select=c(Location, Measure.Name, Compared.to.National, Score, Denominator))
df <- df[with(df, order(Location)), ]
counties <- map_data("county")
counties$loc <- paste(counties$region, counties$subregion, sep=",")
counties <- counties[with(counties, order(loc)), ]
fill_pattern <- count(group_by(counties, loc))$n
data  <- subset(df, Measure.Name=="Hospital return days for heart attack patients", select=c(Location, Compared.to.National, Score, Denominator))
n_hosp_in_county <- count(group_by(data, Location))
n_hosp_wo_var_in_county <- aggregate(data$Score, by = list(data$Location), function(x) {sum(is.na(x))})
n_hosp_wo_var_in_county <- n_hosp_wo_var_in_county[with(n_hosp_wo_var_in_county, order(Group.1)), ]
print(1)
if (sel == "Specific values"){
data[is.na(data)] <- 0
}
else{
data$Score[grepl("Fewer",   data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("Better",  data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("erage D", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("No Diff", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("More",    data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Worse",   data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Number",  data$Compared.to.National, fixed = TRUE)] <- 0
data$Score[grepl("Not Av",  data$Compared.to.National, fixed = TRUE)] <- 0
}
print(1)
added_score_hosp_county <- aggregate(data$Score, by = list(data$Location), FUN=sum, na.rm = TRUE)
added_score_hosp_county <- added_score_hosp_county[with(added_score_hosp_county, order(Group.1)), ]
names(n_hosp_in_county)[names(n_hosp_in_county) == "n"] <- "n_hosp"
n_hosp_in_county$n_hosp_with_var <- n_hosp_in_county$n_hosp - n_hosp_wo_var_in_county$x
n_hosp_in_county$added_score     <- added_score_hosp_county$x
score_manager <- function(n_hosp_with_var, added_score){
if (n_hosp_with_var > 0){ return(added_score / n_hosp_with_var) }
else{ return(NA) }
}
n_hosp_in_county$mean_score <- mapply(score_manager, n_hosp_in_county$n_hosp_with_var, n_hosp_in_county$added_score)
n_hosp_in_county <- subset(n_hosp_in_county, select=c(Location, mean_score))
n_hosp_in_county <- rbind(n_hosp_in_county, mis)
n_hosp_in_county <- n_hosp_in_county[with(n_hosp_in_county, order(Location)), ]
sel = "General overview"
data  <- subset(df, Measure.Name=="Hospital return days for heart attack patients", select=c(Location, Compared.to.National, Score, Denominator))
n_hosp_in_county <- count(group_by(data, Location))
n_hosp_wo_var_in_county <- aggregate(data$Score, by = list(data$Location), function(x) {sum(is.na(x))})
n_hosp_wo_var_in_county <- n_hosp_wo_var_in_county[with(n_hosp_wo_var_in_county, order(Group.1)), ]
print(1)
if (sel == "Specific values"){
data[is.na(data)] <- 0
}
else{
data$Score[grepl("Fewer",   data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("Better",  data$Compared.to.National, fixed = TRUE)] <- 3
data$Score[grepl("erage D", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("No Diff", data$Compared.to.National, fixed = TRUE)] <- 2
data$Score[grepl("More",    data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Worse",   data$Compared.to.National, fixed = TRUE)] <- 1
data$Score[grepl("Number",  data$Compared.to.National, fixed = TRUE)] <- 0
data$Score[grepl("Not Av",  data$Compared.to.National, fixed = TRUE)] <- 0
}
print(1)
added_score_hosp_county <- aggregate(data$Score, by = list(data$Location), FUN=sum, na.rm = TRUE)
added_score_hosp_county <- added_score_hosp_county[with(added_score_hosp_county, order(Group.1)), ]
names(n_hosp_in_county)[names(n_hosp_in_county) == "n"] <- "n_hosp"
n_hosp_in_county$n_hosp_with_var <- n_hosp_in_county$n_hosp - n_hosp_wo_var_in_county$x
n_hosp_in_county$added_score     <- added_score_hosp_county$x
score_manager <- function(n_hosp_with_var, added_score){
if (n_hosp_with_var > 0){ return(added_score / n_hosp_with_var) }
else{ return(NA) }
}
n_hosp_in_county$mean_score <- mapply(score_manager, n_hosp_in_county$n_hosp_with_var, n_hosp_in_county$added_score)
n_hosp_in_county <- subset(n_hosp_in_county, select=c(Location, mean_score))
n_hosp_in_county <- rbind(n_hosp_in_county, mis)
n_hosp_in_county <- n_hosp_in_county[with(n_hosp_in_county, order(Location)), ]
runApp()
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
